package exercise_2;

import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class NumberGenerator implements Runnable{
	Number num;//task 2
	public  NumberGenerator(Number num) {
		this.num=num;
		
	}


@Override
public void run() {
	num.generateNumber();
	System.out.println("Random num generated by "+Thread.currentThread().getName()+" is: "+num.getX());
	
}


public static void main(String[] args) throws InterruptedException {
	//Task 1
//	NumberGenerator ng1=new NumberGenerator(new Number());
//	NumberGenerator ng2=new NumberGenerator(new Number());
//	NumberGenerator ng3=new NumberGenerator(new Number());
//	NumberGenerator ng4=new NumberGenerator(new Number());
//	NumberGenerator ng5=new NumberGenerator(new Number());	
	
////task2
ArrayList<Number> n=new ArrayList<Number>();
n.add(new Number());
n.add(new Number());
n.add(new Number());
n.add(new Number());
n.add(new Number());
NumberGenerator ng1=new NumberGenerator(n.get(0));
NumberGenerator ng2=new NumberGenerator(n.get(1));
NumberGenerator ng3=new NumberGenerator(n.get(2));
NumberGenerator ng4=new NumberGenerator(n.get(3));
NumberGenerator ng5=new NumberGenerator(n.get(4));

//Using threads
//Thread t1=new Thread(ng1);
//Thread t2=new Thread(ng2);
//Thread t3=new Thread(ng3);
//Thread t4=new Thread(ng4);
//Thread t5=new Thread(ng5);
//t1.start();
//t1.join();
//t2.start();
//t2.join();
//t3.start();
//t3.join();
//t4.start();
//t4.join();
//t5.start();
//t5.join();

//Task3 Using thread pool
ExecutorService pool = Executors.newFixedThreadPool(5); 
pool.execute(ng1);
pool.execute(ng2);
pool.execute(ng3);
pool.execute(ng4);
pool.execute(ng5);
pool.shutdown();
pool.awaitTermination(10, TimeUnit.SECONDS);

int sum=0;
//Task1 sum
//sum=ng1.num.getX()+ng2.num.getX()+ng3.num.getX()+ng4.num.getX()+ng5.num.getX();


//Task2 sum

for(int i=0;i<n.size();i++) {
	sum+=n.get(i).getX();
}

System.out.println("Sum is="+sum);
}
}
